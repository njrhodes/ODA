% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CTAparse.R
\name{CTAparse}
\alias{CTAparse}
\title{Parse CTA output files.}
\usage{
CTAparse(run = "", mod = "", type = "", weight = "", ...)
}
\arguments{
\item{run}{The numeric value of the folder where the model output is saved}

\item{mod}{The numeric value of the model number. Additional models can be
specified in '...'}

\item{type}{A character string containing one of the following tree model
solution types: 'Unpruned','Pruned','Enumerated'. The default value is
'Enumerated'. See \code{\link{CTArun}}}

\item{weight}{A logical value specifying whether the models being processed
by \code{CTAparse} are weighted tree models.}

\item{...}{Additional model numbers specified as a list}
}
\value{
The following objects with the run number appended are returned for
  CTA models: \item{cta.denom}{Data frame containing the denominator values
  for the models contained within each output file in the \code{run} folder.}
  \item{cta.list}{Data frame containing the confusion matrix for each CTA
  model contained in the output file. This output can be used to evaluate the
  reproducibility of the model results using a Novometric bootstrap analysis,
  see \code{\link{NOVOboot}}.} \item{cta.model}{Data frame containing the
  parsed model output and significance for CTA models.} \item{cta.sum}{Data
  frame containing the overall accuracy, sensitivity, specificity, positive
  predictive value, and negative predictive value for each CTA model.}
}
\description{
Parses CTA model details, model predictions, and loads objects.
}
\details{
When executed, \code{CTAparse} will return model performance metrics
  and data loaded within the global environment, which can be further
  evaluated.

  The working directory must be directed toward the project, the input files
  must be located within the input folder, and model output files must be
  located within the output folder.

  For each CTA model, \code{CTAparse} will return the \strong{Effect Strength
  for Sensitivity} or ESS.

  In binary classification problems the following relationships are defined:

  \deqn{PAC = \frac{(Sensitivity+Specificity)}{2} \times 100}

  \deqn{ESS = \frac{(PAC-50)}{(100-50)} \times 100}

  \deqn{MPV = \frac{(PPV+NPV)}{2} \times 100}

  \deqn{ESP = \frac{(MPV-50)}{(100-50)} \times 100}

  Unlike mean PAC, ESS is normed against chance (Yarnold \emph{et al}. 2005
  and 2016) providing an intuitive scaling of model accuracy within the ODA
  paradigm.

  The significance values reported are from 1. Monte Carlo simulations for
  all observations and 2. Fisher's Exact tests for LOO analysis.

  The user is referred to the ODA User guide \code{\link{ODAmanual}} and is
  encouraged to review the data contained within the MODEL.OUT file for more
  information.
}
\examples{
# Not run:
# CTAparse(run=1, mod=1, type="Enumerated",weight=F)
# CTAparse(1,1)

}
\references{
Yarnold P.R. and Soltysik R.C. (2005). \emph{Optimal data
  analysis: Guidebook with software for Windows}. APA Books.

  Yarnold, P.R. and Soltysik, R.C. (2016). \emph{Maximizing Predictive
  Accuracy}. ODA Books. DOI: 10.13140/RG.2.1.1368.3286.
}
\seealso{
\code{\link{ODAmanual}} \code{\link{ODAclean}} \code{\link{ODAload}}
  \code{\link{CTArun}} \code{\link{NOVOboot}}
}
\author{
Nathaniel J. Rhodes
}
